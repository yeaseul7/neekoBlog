{"version":3,"file":"component---src-pages-index-js-5d2fa10bae61e65a3a7d.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/components/Utterances.js","webpack://gatsby-starter-blog/./src/components/recentpost.js","webpack://gatsby-starter-blog/./src/components/categorylist.js","webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["import React from \"react\"\n\nclass Utterances extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.commentsEl = React.createRef()\n    this.state = { status: \"pending\" }\n  }\n\n  componentDidMount() {\n    const scriptEl = document.createElement(\"script\")\n    scriptEl.onload = () => this.setState({ status: \"success\" })\n    scriptEl.onerror = () => this.setState({ status: \"failed\" })\n    scriptEl.async = true\n    scriptEl.src = \"https://utteranc.es/client.js\"\n    scriptEl.setAttribute(\"repo\", \"yeaseul7/neekoblog\")\n    scriptEl.setAttribute(\"issue-term\", \"title\")\n    scriptEl.setAttribute(\"theme\", \"github-light\")\n    scriptEl.setAttribute(\"crossorigin\", \"anonymous\")\n    this.commentsEl.current.appendChild(scriptEl)\n  }\n\n  render() {\n    const { status } = this.state\n\n    return (\n      <div className=\"comments-wrapper\">\n        {status === \"failed\" && <div>Error. Please try again.</div>}\n        {status === \"pending\" && <div>Loading script...</div>}\n        <div ref={this.commentsEl} />\n      </div>\n    )\n  }\n}\n\nexport default Utterances\n","import * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport styled from \"styled-components\"\nimport { Link } from \"gatsby\"\n\nconst RecentPosts = styled.div`\n  background: #fefae0;\n  padding: 1rem;\n  border-radius: 15px;\n  & > .title {\n    margin: 0;\n  }\n  & > .list {\n    list-style: none;\n    padding: 0;\n    & > li {\n      background: #faedcd;\n      padding: 1rem;\n      border-radius: 15px;\n      margin: 1rem auto;\n      transition: box-shadow 0.3s ease-in-out;\n      box-shadow: none;\n      &:hover {\n        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3); /* 마우스 호버 시 그림자 추가 */\n      }\n      & > a {\n        text-decoration: none;\n        & > .listtitle {\n          font-weight: 600;\n        }\n        & > p,\n        small {\n          margin: 0;\n          color: #333333;\n        }\n      }\n    }\n  }\n`\n\nconst RecentPostBox = () => {\n  const data = useStaticQuery(graphql`\n    query RecentPostQuery {\n      allMarkdownRemark(\n        filter: {\n          frontmatter: { date: { gte: \"2024-01-01\", lt: \"2025-01-01\" } }\n        }\n        sort: { fields: frontmatter___date, order: DESC }\n        limit: 5\n      ) {\n        nodes {\n          frontmatter {\n            title\n            date(formatString: \"YYYY-MM-DD\")\n            description\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  `)\n\n  const posts = data.allMarkdownRemark.nodes\n\n  return (\n    <RecentPosts>\n      <p className=\"title\">최근 게시글</p>\n      <ul className=\"list\">\n        {posts.map(post => (\n          <li key={post.fields.slug} style={{ listStyle: \"none\" }}>\n            <Link to={post.fields.slug}>\n              <p className=\"listtitle\">{post.frontmatter.title}</p>\n              <p>{post.frontmatter.description}</p>\n              <small>{post.frontmatter.date}</small>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </RecentPosts>\n  )\n}\nexport default RecentPostBox\n","import * as React from \"react\"\nimport styled from \"styled-components\"\n\nconst ListDiv = styled.ul`\n  display: flex;\n  list-style: none;\n  justify-content: space-around;\n  margin: 1rem auto;\n  & > li {\n    background: #d4a373;\n    border-radius: 15px;\n    padding: 5px 10px;\n    margin: 0 auto;\n    color: #fefae0;\n    &:hover {\n      background-color: #b2875e;\n    }\n  }\n`\n\nconst CategoryList = ({ data, onCategorySelect }) => {\n  let categories = data.map(post => {\n    return post.frontmatter.category\n  })\n  categories = [...new Set(categories)]\n\n  return (\n    <ListDiv>\n      <li onClick={() => onCategorySelect(\"\")}>\n        <p>All</p>\n      </li>\n      {categories.map((category, index) => (\n        <li key={index} onClick={() => onCategorySelect(category)}>\n          <p>{category}</p>\n        </li>\n      ))}\n    </ListDiv>\n  )\n}\nexport default CategoryList\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Utterances from \"../components/Utterances\"\nimport RecentPostBox from \"../components/recentpost\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport CategoryList from \"../components/categorylist\"\nimport styled from \"styled-components\"\n\n// 스타일\nconst ArticleBox = styled.article`\n  background: #fefae0;\n  border-radius: 15px;\n  padding: 1rem;\n  height: 14rem;\n  transition: box-shadow 0.3s ease-in-out;\n  box-shadow: none;\n  &:hover {\n    box-shadow: 0 5px 8px rgb(82 82 82 / 74%);\n  }\n  & > header {\n    height: 5rem;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: flex-start;\n  }\n`\nconst ArticleMain = styled.ol`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 10px;\n  list-style: none;\n  padding: 0;\n`\nconst ArticleTitle = styled.p`\n  margin: 0 0 0.5rem;\n  font-weight: 600;\n  & > a {\n    text-decoration: none;\n    font-size: 1.1rem;\n    color: #333333;\n  }\n`\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n  const [selectedCategory, setSelectedCategory] = React.useState(\"\")\n\n  const filteredPosts = selectedCategory\n    ? posts.filter(post => post.frontmatter.category === selectedCategory)\n    : posts\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <p>\"gatsby-source-filesystem\" 플러그인이 포스트를 찾지 못했습니다!</p>\n        {/* (or the directory you specified for the \"gatsby-source-filesystem\" plugin in gatsby-config.js).  */}\n      </Layout>\n    )\n  }\n  return (\n    <Layout location={location} title={siteTitle}>\n      <CategoryList data={posts} onCategorySelect={setSelectedCategory} />\n      <RecentPostBox />\n      <ArticleMain style={{ listStyle: `none` }}>\n        {filteredPosts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n          let shortenedTitle =\n            title.length > 20 ? title.substring(0, 20) + \"...\" : title\n          const description = post.frontmatter.description || post.excerpt\n          const shortenedDescription =\n            description.length > 100\n              ? description.substring(0, 50) + \"...\"\n              : description\n\n          return (\n            <li key={post.fields.slug}>\n              <ArticleBox\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <ArticleTitle>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{shortenedTitle}</span>\n                    </Link>\n                  </ArticleTitle>\n                  <small>{post.frontmatter.date}</small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: shortenedDescription,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </ArticleBox>\n            </li>\n          )\n        })}\n      </ArticleMain>\n      <Utterances />\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\nexport const Head = () => <Seo title=\"All posts\" />\n\nexport const pageQuery = graphql`\n  {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          category\n        }\n      }\n    }\n  }\n`\n"],"names":["Utterances","_React$Component","props","_this","call","commentsEl","React","state","status","_inheritsLoose","_proto","prototype","componentDidMount","scriptEl","document","createElement","onload","this","setState","onerror","async","src","setAttribute","current","appendChild","render","className","ref","RecentPosts","styled","div","withConfig","displayName","componentId","RecentPostBox","posts","useStaticQuery","allMarkdownRemark","nodes","map","post","key","fields","slug","style","listStyle","Link","to","frontmatter","title","description","date","ListDiv","ul","_ref","data","onCategorySelect","categories","category","_toConsumableArray","Set","onClick","index","ArticleBox","article","ArticleMain","ol","ArticleTitle","p","_data$site$siteMetada","location","siteTitle","site","siteMetadata","selectedCategory","setSelectedCategory","filteredPosts","filter","length","Layout","CategoryList","shortenedTitle","substring","excerpt","shortenedDescription","itemScope","itemType","itemProp","dangerouslySetInnerHTML","__html","Head","Seo"],"sourceRoot":""}