{"version":3,"file":"component---src-templates-blog-post-js-ccbb94c52d4df7cf53b3.js","mappings":"kPAYA,MAAMA,E,QAAaC,QAAOC,IAAGC,WAAA,CAAAC,YAAA,kBAAAC,YAAA,eAAVJ,CAAU,sCAgD7B,MA3CYK,KAAO,IAADC,EAAAC,EAChB,MAAMC,GAAOC,EAAAA,EAAAA,gBAAe,cAiBtBC,EAA+B,QAAzBJ,EAAGE,EAAKG,KAAKC,oBAAY,IAAAN,OAAA,EAAtBA,EAAwBI,OACF,QAAzBH,EAAGC,EAAKG,KAAKC,oBAAY,IAAAL,GAAtBA,EAAwBM,OAEvC,OACEC,EAAAA,cAACf,EAAU,CAACgB,UAAU,OACpBD,EAAAA,cAACE,EAAAA,EAAW,CACVD,UAAU,aACVE,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,yBACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,kBAAiBC,QAAA,0XAEtBd,aAAM,EAANA,EAAQe,OACPX,EAAAA,cAAA,SAAG,cACUA,EAAAA,cAAA,cAASJ,EAAOe,OAIpB,E,oBCjDjB,MAwDaC,EAAOC,IAAyC,IAAtCnB,MAAQoB,eAAgBC,IAAQF,EACrD,OACEb,EAAAA,cAACgB,EAAAA,EAAG,CACFC,MAAOF,EAAKG,YAAYD,MACxBE,YAAaJ,EAAKG,YAAYC,aAAeJ,EAAKK,SAClD,EAIN,MAjEyBC,IAGlB,IAADC,EAAA,IAFJ5B,MAAM,SAAE6B,EAAQ,KAAEC,EAAI,KAAE3B,EAAMiB,eAAgBC,GAAM,SACpDU,GACDJ,EACC,MAAMK,GAA6B,QAAjBJ,EAAAzB,EAAKC,oBAAY,IAAAwB,OAAA,EAAjBA,EAAmBL,QAAK,QAE1C,OACEjB,EAAAA,cAAC2B,EAAAA,EAAM,CAACF,SAAUA,EAAUR,MAAOS,GACjC1B,EAAAA,cAAC4B,EAAAA,GAAW,CACV3B,UAAU,YACV4B,WAAS,EACTC,SAAS,6BAET9B,EAAAA,cAAC+B,EAAAA,GAAU,KACT/B,EAAAA,cAAA,MAAIgC,SAAS,YAAYjB,EAAKG,YAAYD,OAC1CjB,EAAAA,cAAA,SAAIe,EAAKG,YAAYe,OAEvBjC,EAAAA,cAAA,sBACEkC,wBAAyB,CAAEC,OAAQpB,EAAKqB,MACxCJ,SAAS,gBAEXhC,EAAAA,cAAA,WACAA,EAAAA,cAAA,cACEA,EAAAA,cAACT,EAAG,QAGRS,EAAAA,cAAA,OAAKC,UAAU,iBACbD,EAAAA,cAAA,MACEqC,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX1C,EAAAA,cAAC2C,EAAAA,GAAc,KACZpB,GACCvB,EAAAA,cAAC4C,EAAAA,KAAI,CAACC,GAAItB,EAASuB,OAAOC,KAAMC,IAAI,QAAO,KACtCzB,EAASL,YAAYD,QAI9BjB,EAAAA,cAAC2C,EAAAA,GAAc,KACZnB,GACCxB,EAAAA,cAAC4C,EAAAA,KAAI,CAACC,GAAIrB,EAAKsB,OAAOC,KAAMC,IAAI,QAC7BxB,EAAKN,YAAYD,MAAM,SAM3B,C","sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\nimport styled from \"styled-components\"\n\nconst ProfileBox = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  return (\n    <ProfileBox className=\"bio\">\n      <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={[\"auto\", \"webp\", \"avif\"]}\n        src=\"../images/ot171@3x.png\"\n        width={38}\n        height={38}\n        quality={95}\n        alt=\"Profile picture\"\n      />\n      {author?.name && (\n        <p>\n          Written by <strong>{author.name}</strong>\n          {/* {author?.summary || null} */}\n        </p>\n      )}\n    </ProfileBox>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport { PostArticle, PostFooterList, PostHeader } from \"../styles/postStyle\"\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogPostTemplate = ({\n  data: { previous, next, site, markdownRemark: post },\n  location,\n}) => {\n  const siteTitle = site.siteMetadata?.title || `Title`\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <PostArticle\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <PostHeader>\n          <h4 itemProp=\"headline\">{post.frontmatter.title}</h4>\n          <p>{post.frontmatter.date}</p>\n        </PostHeader>\n        <sectiarticleBodyon\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n        <footer>\n          <Bio />\n        </footer>\n      </PostArticle>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <PostFooterList>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </PostFooterList>\n          <PostFooterList>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </PostFooterList>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport const Head = ({ data: { markdownRemark: post } }) => {\n  return (\n    <Seo\n      title={post.frontmatter.title}\n      description={post.frontmatter.description || post.excerpt}\n    />\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["ProfileBox","styled","div","withConfig","displayName","componentId","Bio","_data$site$siteMetada","_data$site$siteMetada2","data","useStaticQuery","author","site","siteMetadata","social","React","className","StaticImage","layout","formats","src","width","height","quality","alt","__error","name","Head","_ref2","markdownRemark","post","Seo","title","frontmatter","description","excerpt","_ref","_site$siteMetadata","previous","next","location","siteTitle","Layout","PostArticle","itemScope","itemType","PostHeader","itemProp","date","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","PostFooterList","Link","to","fields","slug","rel"],"sourceRoot":""}